{"version":3,"sources":["skylark-langx-async.js"],"names":["define","skylark","attach","arrays","funcs","objects","async","slice","Array","prototype","proxy","makeArray","result","mixin","Promise","always","handler","this","then","done","i","arguments","length","fail","catch","Deferred","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","e","state","notified","listeners","onResolved","onRejected","onProgress","progress","call","args","undefined","__ctx__","apply","forEach","value","push","pipe","notify","listener","error","resolveWith","context","_resolved","p","reason","rejectWith","_rejected","callback","errback","progback","all","array","d","bind","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","data","each","items","next","transformed","count","returned","item","index","transformedItem","parallel","arr","ctx","rets","func","series","waterful","main"],"mappings":"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","file":"../skylark-langx-async.js","sourcesContent":["define('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"langx.async\");\t\r\n});\ndefine('skylark-langx-async/deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\",\r\n    \"./async\"\r\n],function(arrays,funcs,objects,async){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return async.Deferred = Deferred;\r\n});\ndefine('skylark-langx-async/each',[\r\n\t\"./async\"\r\n],function(async){\r\n\r\n\tfunction each(items, next, callback) {\r\n\t\tif (items.length === 0) return callback(undefined, items);\r\n\r\n\t\tvar transformed = new Array(items.length);\r\n\t\tvar count = 0;\r\n\t\tvar returned = false;\r\n\r\n\t\titems.forEach(function(item, index) {\r\n\t\t\tnext(item, function(error, transformedItem) {\r\n\t\t    \tif (returned) return;\r\n\t\t    \tif (error) {\r\n\t\t      \t\treturned = true;\r\n\t\t      \t\treturn callback(error);\r\n\t\t    \t}\r\n\t\t    \ttransformed[index] = transformedItem;\r\n\t\t    \tcount += 1;\r\n\t\t    \tif (count === items.length) {\r\n\t\t    \t\treturn callback(undefined, transformed);\r\n\t\t    \t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn async.each = each;\r\n\r\n});\ndefine('skylark-langx-async/parallel',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n    function parallel(arr,args,ctx) {\r\n        var rets = [];\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        objects.each(arr,function(i,func){\r\n            rets.push(func.apply(ctx,args));\r\n        });\r\n\r\n        return Deferred.all(rets);\r\n    }\r\n\r\n\treturn async.parallel = parallel;\r\n});\ndefine('skylark-langx-async/series',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n     function series(arr,args,ctx) {\r\n        var rets = [],\r\n            d = new Deferred(),\r\n            p = d.promise;\r\n\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        d.resolve();\r\n        objects.each(arr,function(i,func){\r\n            p = p.then(function(){\r\n                return func.apply(ctx,args);\r\n            });\r\n            rets.push(p);\r\n        });\r\n\r\n        return Deferred.all(rets);\r\n    }\r\n\r\n\treturn async.series = series;\r\n});\ndefine('skylark-langx-async/waterful',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n    function waterful(arr,args,ctx) {\r\n        var d = new Deferred(),\r\n            p = d.promise;\r\n\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        d.resolveWith(ctx,args);\r\n\r\n        objects.each(arr,function(i,func){\r\n            p = p.then(func);\r\n        });\r\n        return p;\r\n    }\r\n\r\n\treturn async.waterful = waterful;\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\",\r\n\t\"./deferred\",\r\n\t\"./each\",\r\n\t\"./parallel\",\r\n\t\"./series\",\r\n\t\"./waterful\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\n"]}