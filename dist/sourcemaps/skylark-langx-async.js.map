{"version":3,"sources":["skylark-langx-async.js"],"names":["define","skylark","attach","arrays","funcs","objects","async","slice","Array","prototype","proxy","makeArray","result","mixin","Promise","always","handler","this","then","done","i","arguments","length","fail","catch","Deferred","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","e","state","notified","listeners","onResolved","onRejected","onProgress","progress","call","args","undefined","__ctx__","apply","forEach","value","push","pipe","notify","listener","error","notifyWith","ctx","resolveWith","context","_resolved","p","reason","rejectWith","_rejected","callback","errback","progback","all","array","d","bind","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","data","each","items","next","transformed","count","returned","item","index","transformedItem","parallel","arr","rets","func","series","waterful","main"],"mappings":";;;;;;;g4BAAAA,EAAA,6BACA,oBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,iBAEAF,GACA,uBACA,sBACA,wBACA,WACA,SAAAG,EAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAC,MAAAC,UAAAF,MACAG,EAAAN,EAAAM,MACAC,EAAAR,EAAAQ,UACAC,EAAAP,EAAAO,OACAC,EAAAR,EAAAQ,MAEAA,EAAAC,QAAAL,WACAM,OAAA,SAAAC,GAIA,OADAC,KAAAC,KAAAF,EAAAA,GACAC,MAEAE,KAAA,WACA,IAAA,IAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IACAH,KAAAC,KAAAG,UAAAD,IAEA,OAAAH,MAEAM,KAAA,SAAAP,GA2NA,OA3NAhB,GACA,uBACA,sBACA,yBACA,SAAAG,EAAAC,EAAAC,GAGA,IAAAE,EAAAC,MAAAC,UAAAF,MACAG,EAAAN,EAAAM,MACAC,EAAAR,EAAAQ,UACAC,EAAAP,EAAAO,OACAC,EAAAR,EAAAQ,MAEAA,EAAAC,QAAAL,WACAM,OAAA,SAAAC,GAIA,OADAC,KAAAC,KAAAF,EAAAA,GACAC,MAEAE,KAAA,WACA,IAAA,IAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IACAH,KAAAC,KAAAG,UAAAD,IAEA,OAAAH,MAEAM,KAAA,SAAAP,GAIA,OADAC,KAAAO,MAAAR,GACAC,QAKA,IAAAQ,EAAA,WACA,IAAAC,EAAAT,KACAA,KAAAU,QAAAC,EAAA,IAAAd,QAAA,SAAAe,EAAAC,GACAJ,EAAAK,SAAAF,EACAH,EAAAM,QAAAF,MAlEA,SAAAF,EAAAD,GAEA,GAAAA,EAAAM,WAAA,OAAAN,EAGA,IAAAO,GAAA,EACAC,GAAA,EACAF,GAAA,EAGArB,EAAAe,EAAAT,KACA,SAAAkB,GAGA,OAFAH,GAAA,EACAC,GAAA,EACAE,GAEA,SAAAC,GAGA,MAFAF,GAAA,EACAD,GAAA,EACAG,IAIAzB,EAAAqB,WAAA,WAAA,OAAAA,GACArB,EAAAsB,UAAA,WAAA,OAAAA,GACAtB,EAAAuB,WAAA,WAAA,OAAAA,GAEAvB,EAAA0B,MAAA,WACA,OAAAL,EACA,WAEAE,EACA,WAEA,WAGA,IAAAI,KACAC,KA4DA,OAzDA5B,EAAAM,KAAA,SAAAuB,EAAAC,EAAAC,GAIA,OAHAA,GACA1B,KAAA2B,SAAAD,GAEAf,EAAAd,QAAAL,UAAAS,KAAA2B,KAAA5B,KACAwB,GAAA,SAAAK,GACA,OAAAA,QAAAC,IAAAD,EAAAE,QACAP,EAAAQ,MAAAH,EAAAE,QAAAF,GAEAL,EAAAK,IAGAJ,GAAA,SAAAI,GACA,OAAAA,QAAAC,IAAAD,EAAAE,QACAN,EAAAO,MAAAH,EAAAE,QAAAF,GAEAJ,EAAAI,OAMAlC,EAAAgC,SAAA,SAAA5B,GAKA,OAJAuB,EAAAW,QAAA,SAAAC,GACAnC,EAAAmC,KAEAX,EAAAY,KAAApC,GACAC,MAGAL,EAAAyC,KAAAzC,EAAAM,KAEAN,EAAA0C,OAAA,SAAAH,GACA,IAGA,OAFAZ,EAAAa,KAAAD,GAEAX,EAAAU,QAAA,SAAAK,GACA,OAAAA,EAAAJ,KAEA,MAAAK,GACAvC,KAAAa,OAAA0B,GAEA,OAAAvC,MAGAL,EAAA6C,WAAA,SAAAC,EAAAP,GACA,IAGA,OAFAZ,EAAAa,KAAAD,GAEAX,EAAAU,QAAA,SAAAK,GACA,OAAAA,EAAAV,KAAAa,EAAAP,KAEA,MAAAK,GACAvC,KAAAa,OAAA0B,GAEA,OAAAvC,MAEAL,EA+IA,OA3IAa,EAAAhB,UAAAoB,QAAA,SAAAsB,GACA,IAAAL,EAAAvC,EAAAsC,KAAAxB,WACA,OAAAJ,KAAA0C,YAAA,KAAAb,IAGArB,EAAAhB,UAAAkD,YAAA,SAAAC,EAAAd,GAKA,OAJAA,EAAAA,EAAAnC,EAAAmC,OACAE,QAAAY,EACA3C,KAAAc,SAAAe,GACA7B,KAAA4C,WAAA,EACA5C,MAGAQ,EAAAhB,UAAA6C,OAAA,SAAAH,GACA,IAAAW,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAAR,OAAAH,GACAlC,MAGAQ,EAAAhB,UAAAqB,OAAA,SAAAiC,GACA,IAAAjB,EAAAvC,EAAAsC,KAAAxB,WACA,OAAAJ,KAAA+C,WAAA,KAAAlB,IAGArB,EAAAhB,UAAAuD,WAAA,SAAAJ,EAAAd,GAKA,OAJAA,EAAAA,EAAAnC,EAAAmC,OACAE,QAAAY,EACA3C,KAAAe,QAAAc,GACA7B,KAAAgD,WAAA,EACAhD,MAGAQ,EAAAhB,UAAAwB,WAAA,WACA,IAAA6B,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA7B,cAGAR,EAAAhB,UAAA0B,WAAA,WACA,IAAA2B,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA3B,cAGAV,EAAAhB,UAAA6B,MAAA,WACA,IAAAwB,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAxB,SAGAb,EAAAhB,UAAAS,KAAA,SAAAgD,EAAAC,EAAAC,GACA,IAAAN,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA5C,KAAAgD,EAAAC,EAAAC,IAGA3C,EAAAhB,UAAAmC,SAAA,SAAAwB,GACA,IAAAN,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAlB,SAAAwB,IAGA3C,EAAAhB,UAAAe,MAAA,SAAA2C,GACA,IAAAL,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAtC,MAAA2C,IAIA1C,EAAAhB,UAAAM,OAAA,WACA,IAAA+C,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAA/C,OAAAkC,MAAAa,EAAAzC,WACAJ,MAGAQ,EAAAhB,UAAAU,KAAA,WACA,IAAA2C,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAA3C,KAAA8B,MAAAa,EAAAzC,WACAJ,MAGAQ,EAAAhB,UAAAc,KAAA,SAAA4C,GACA,IAAAL,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAAvC,KAAA4C,GACAlD,MAIAQ,EAAA4C,IAAA,SAAAC,GAEA,IAAAC,EAAA,IAAA9C,EAEA,OADAX,QAAAuD,IAAAC,GAAApD,KAAAqD,EAAA1C,QAAA2C,KAAAD,GAAAA,EAAAzC,OAAA0C,KAAAD,IACA3D,EAAA2D,EAAA,YAGA9C,EAAAgD,MAAA,SAAAH,GACA,OAAA1C,EAAAd,QAAA4D,KAAAJ,KAIA7C,EAAAkD,KAAA,SAAAC,EAAAV,EAAAC,EAAAC,GACA,IAAAS,EAAAD,GAAA,mBAAAA,EAAA1D,KACA4D,EAAAD,GAAAD,aAAA9D,QAEA,IAAA+D,EACA,OAAAxD,UAAAC,OAAA,EACA4C,EAAAA,EAAAU,GAAAA,GAEA,IAAAnD,GAAAI,QAAA+C,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAAtD,EAAAmD,EAAAI,QACAJ,EAAA1D,KAAAR,EAAAqE,EAAAlD,QAAAkD,GAAArE,EAAAqE,EAAAjD,OAAAiD,GAAAA,EAAAzB,QACAsB,EAAAG,EAAApD,QAGA,OAAAuC,GAAAC,GAAAC,EACAQ,EAAA1D,KAAAgD,EAAAC,EAAAC,GAEAQ,GAGAnD,EAAAK,OAAA,SAAAmD,GACA,IAAAV,EAAA,IAAA9C,EAEA,OADA8C,EAAAzC,OAAAmD,GACAV,EAAA5C,SASAF,EAAAyD,UANAzD,EAAAI,QAAA,SAAAsD,GACA,IAAAZ,EAAA,IAAA9C,EAEA,OADA8C,EAAA1C,QAAAoB,MAAAsB,EAAAlD,WACAkD,EAAA5C,SAMAF,EAAAE,QAAA,SAAAuC,GACA,IAAAK,EAAA,IAAA9C,EAIA,OAFAyC,EAAAK,EAAA1C,QAAA2C,KAAAD,GAAAA,EAAAzC,OAAA0C,KAAAD,GAAAA,EAAA3B,SAAA4B,KAAAD,IAEAA,EAAA5C,SAGAF,IAIAR,KAAAO,MAAAR,GACAC,QAKA,IAAAQ,EAAA,WACA,IAAAC,EAAAT,KACAA,KAAAU,QAAAC,EAAA,IAAAd,QAAA,SAAAe,EAAAC,GACAJ,EAAAK,SAAAF,EACAH,EAAAM,QAAAF,MAeA,SAAAF,EAAAD,GAEA,GAAAA,EAAAM,WAAA,OAAAN,EAGA,IAAAO,GAAA,EACAC,GAAA,EACAF,GAAA,EAGArB,EAAAe,EAAAT,KACA,SAAAkB,GAGA,OAFAH,GAAA,EACAC,GAAA,EACAE,GAEA,SAAAC,GAGA,MAFAF,GAAA,EACAD,GAAA,EACAG,IAIAzB,EAAAqB,WAAA,WAAA,OAAAA,GACArB,EAAAsB,UAAA,WAAA,OAAAA,GACAtB,EAAAuB,WAAA,WAAA,OAAAA,GAEAvB,EAAA0B,MAAA,WACA,OAAAL,EACA,WAEAE,EACA,WAEA,WAGA,IAAAI,KACAC,KAgDA,OA7CA5B,EAAAM,KAAA,SAAAuB,EAAAC,EAAAC,GAIA,OAHAA,GACA1B,KAAA2B,SAAAD,GAEAf,EAAAd,QAAAL,UAAAS,KAAA2B,KAAA5B,KACAwB,GAAA,SAAAK,GACA,OAAAA,QAAAC,IAAAD,EAAAE,QACAP,EAAAQ,MAAAH,EAAAE,QAAAF,GAEAL,EAAAK,IAGAJ,GAAA,SAAAI,GACA,OAAAA,QAAAC,IAAAD,EAAAE,QACAN,EAAAO,MAAAH,EAAAE,QAAAF,GAEAJ,EAAAI,OAMAlC,EAAAgC,SAAA,SAAA5B,GAKA,OAJAuB,EAAAW,QAAA,SAAAC,GACAnC,EAAAmC,KAEAX,EAAAY,KAAApC,GACAC,MAGAL,EAAAyC,KAAAzC,EAAAM,KAEAN,EAAA0C,OAAA,SAAAH,GACA,IAGA,OAFAZ,EAAAa,KAAAD,GAEAX,EAAAU,QAAA,SAAAK,GACA,OAAAA,EAAAJ,KAEA,MAAAK,GACAvC,KAAAa,OAAA0B,GAEA,OAAAvC,MAGAL,EA+IA,OA3IAa,EAAAhB,UAAAoB,QAAA,SAAAsB,GACA,IAAAL,EAAAvC,EAAAsC,KAAAxB,WACA,OAAAJ,KAAA0C,YAAA,KAAAb,IAGArB,EAAAhB,UAAAkD,YAAA,SAAAC,EAAAd,GAKA,OAJAA,EAAAA,EAAAnC,EAAAmC,OACAE,QAAAY,EACA3C,KAAAc,SAAAe,GACA7B,KAAA4C,WAAA,EACA5C,MAGAQ,EAAAhB,UAAA6C,OAAA,SAAAH,GACA,IAAAW,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAAR,OAAAH,GACAlC,MAGAQ,EAAAhB,UAAAqB,OAAA,SAAAiC,GACA,IAAAjB,EAAAvC,EAAAsC,KAAAxB,WACA,OAAAJ,KAAA+C,WAAA,KAAAlB,IAGArB,EAAAhB,UAAAuD,WAAA,SAAAJ,EAAAd,GAKA,OAJAA,EAAAA,EAAAnC,EAAAmC,OACAE,QAAAY,EACA3C,KAAAe,QAAAc,GACA7B,KAAAgD,WAAA,EACAhD,MAGAQ,EAAAhB,UAAAwB,WAAA,WACA,IAAA6B,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA7B,cAGAR,EAAAhB,UAAA0B,WAAA,WACA,IAAA2B,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA3B,cAGAV,EAAAhB,UAAA6B,MAAA,WACA,IAAAwB,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAxB,SAGAb,EAAAhB,UAAAS,KAAA,SAAAgD,EAAAC,EAAAC,GACA,IAAAN,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAA5C,KAAAgD,EAAAC,EAAAC,IAGA3C,EAAAhB,UAAAmC,SAAA,SAAAwB,GACA,IAAAN,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAlB,SAAAwB,IAGA3C,EAAAhB,UAAAe,MAAA,SAAA2C,GACA,IAAAL,EAAAlD,EAAAK,KAAA,WACA,OAAA6C,EAAAtC,MAAA2C,IAIA1C,EAAAhB,UAAAM,OAAA,WACA,IAAA+C,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAA/C,OAAAkC,MAAAa,EAAAzC,WACAJ,MAGAQ,EAAAhB,UAAAU,KAAA,WACA,IAAA2C,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAA3C,KAAA8B,MAAAa,EAAAzC,WACAJ,MAGAQ,EAAAhB,UAAAc,KAAA,SAAA4C,GACA,IAAAL,EAAAlD,EAAAK,KAAA,WAEA,OADA6C,EAAAvC,KAAA4C,GACAlD,MAIAQ,EAAA4C,IAAA,SAAAC,GAEA,IAAAC,EAAA,IAAA9C,EAEA,OADAX,QAAAuD,IAAAC,GAAApD,KAAAqD,EAAA1C,QAAA2C,KAAAD,GAAAA,EAAAzC,OAAA0C,KAAAD,IACA3D,EAAA2D,EAAA,YAGA9C,EAAAgD,MAAA,SAAAH,GACA,OAAA1C,EAAAd,QAAA4D,KAAAJ,KAIA7C,EAAAkD,KAAA,SAAAC,EAAAV,EAAAC,EAAAC,GACA,IAAAS,EAAAD,GAAA,mBAAAA,EAAA1D,KACA4D,EAAAD,GAAAD,aAAA9D,QAEA,IAAA+D,EACA,OAAAxD,UAAAC,OAAA,EACA4C,EAAAA,EAAAU,GAAAA,GAEA,IAAAnD,GAAAI,QAAA+C,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAAtD,EAAAmD,EAAAI,QACAJ,EAAA1D,KAAAR,EAAAqE,EAAAlD,QAAAkD,GAAArE,EAAAqE,EAAAjD,OAAAiD,GAAAA,EAAAzB,QACAsB,EAAAG,EAAApD,QAGA,OAAAuC,GAAAC,GAAAC,EACAQ,EAAA1D,KAAAgD,EAAAC,EAAAC,GAEAQ,GAGAnD,EAAAK,OAAA,SAAAmD,GACA,IAAAV,EAAA,IAAA9C,EAEA,OADA8C,EAAAzC,OAAAmD,GACAV,EAAA5C,SASAF,EAAAyD,UANAzD,EAAAI,QAAA,SAAAsD,GACA,IAAAZ,EAAA,IAAA9C,EAEA,OADA8C,EAAA1C,QAAAoB,MAAAsB,EAAAlD,WACAkD,EAAA5C,SAMAF,EAAAE,QAAA,SAAAuC,GACA,IAAAK,EAAA,IAAA9C,EAIA,OAFAyC,EAAAK,EAAA1C,QAAA2C,KAAAD,GAAAA,EAAAzC,OAAA0C,KAAAD,GAAAA,EAAA3B,SAAA4B,KAAAD,IAEAA,EAAA5C,SAGArB,EAAAmB,SAAAA,IAEAzB,EAAA,4BACA,WACA,SAAAM,GAyBA,OAAAA,EAAA8E,KAvBA,SAAAC,EAAAC,EAAApB,GACA,GAAA,IAAAmB,EAAA/D,OAAA,OAAA4C,OAAAnB,EAAAsC,GAEA,IAAAE,EAAA,IAAA/E,MAAA6E,EAAA/D,QACAkE,EAAA,EACAC,GAAA,EAEAJ,EAAAnC,QAAA,SAAAwC,EAAAC,GACAL,EAAAI,EAAA,SAAAlC,EAAAoC,GACA,IAAAH,EACA,OAAAjC,GACAiC,GAAA,EACAvB,EAAAV,KAEA+B,EAAAI,GAAAC,GACAJ,GAAA,KACAH,EAAA/D,OACA4C,OAAAnB,EAAAwC,QADA,UAUAvF,EAAA,gCACA,wBACA,UACA,cACA,SAAAK,EAAAC,EAAAmB,GAaA,OAAAnB,EAAAuF,SAZA,SAAAC,EAAAhD,EAAAY,GACA,IAAAqC,KAQA,OAPArC,EAAAA,GAAA,KACAZ,EAAAA,MAEAzC,EAAA+E,KAAAU,EAAA,SAAA1E,EAAA4E,GACAD,EAAA3C,KAAA4C,EAAA/C,MAAAS,EAAAZ,MAGArB,EAAA4C,IAAA0B,MAKA/F,EAAA,8BACA,wBACA,UACA,cACA,SAAAK,EAAAC,EAAAmB,GAoBA,OAAAnB,EAAA2F,OAnBA,SAAAH,EAAAhD,EAAAY,GACA,IAAAqC,KACAxB,EAAA,IAAA9C,EACAqC,EAAAS,EAAA5C,QAaA,OAXA+B,EAAAA,GAAA,KACAZ,EAAAA,MAEAyB,EAAA1C,UACAxB,EAAA+E,KAAAU,EAAA,SAAA1E,EAAA4E,GACAlC,EAAAA,EAAA5C,KAAA,WACA,OAAA8E,EAAA/C,MAAAS,EAAAZ,KAEAiD,EAAA3C,KAAAU,KAGArC,EAAA4C,IAAA0B,MAKA/F,EAAA,gCACA,wBACA,UACA,cACA,SAAAK,EAAAC,EAAAmB,GAgBA,OAAAnB,EAAA4F,SAfA,SAAAJ,EAAAhD,EAAAY,GACA,IAAAa,EAAA,IAAA9C,EACAqC,EAAAS,EAAA5C,QAUA,OARA+B,EAAAA,GAAA,KACAZ,EAAAA,MAEAyB,EAAAZ,YAAAD,EAAAZ,GAEAzC,EAAA+E,KAAAU,EAAA,SAAA1E,EAAA4E,GACAlC,EAAAA,EAAA5C,KAAA8E,KAEAlC,KAKA9D,EAAA,4BACA,UACA,aACA,SACA,aACA,WACA,cACA,SAAAM,GACA,OAAAA,IAEAN,EAAA,uBAAA,4BAAA,SAAAmG,GAAA,OAAAA","file":"../skylark-langx-async.js","sourcesContent":["define('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"langx.async\");\t\r\n});\ndefine([\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\",\r\n    \"./async\"\r\n],function(arrays,funcs,objects,async){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { define([\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        result.notifyWith = function(ctx,value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener.call(ctx,value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n                return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return async.Deferred = Deferred;\r\n});\ndefine('skylark-langx-async/each',[\r\n\t\"./async\"\r\n],function(async){\r\n\r\n\tfunction each(items, next, callback) {\r\n\t\tif (items.length === 0) return callback(undefined, items);\r\n\r\n\t\tvar transformed = new Array(items.length);\r\n\t\tvar count = 0;\r\n\t\tvar returned = false;\r\n\r\n\t\titems.forEach(function(item, index) {\r\n\t\t\tnext(item, function(error, transformedItem) {\r\n\t\t    \tif (returned) return;\r\n\t\t    \tif (error) {\r\n\t\t      \t\treturned = true;\r\n\t\t      \t\treturn callback(error);\r\n\t\t    \t}\r\n\t\t    \ttransformed[index] = transformedItem;\r\n\t\t    \tcount += 1;\r\n\t\t    \tif (count === items.length) {\r\n\t\t    \t\treturn callback(undefined, transformed);\r\n\t\t    \t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn async.each = each;\r\n\r\n});\ndefine('skylark-langx-async/parallel',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n    function parallel(arr,args,ctx) {\r\n        var rets = [];\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        objects.each(arr,function(i,func){\r\n            rets.push(func.apply(ctx,args));\r\n        });\r\n\r\n        return Deferred.all(rets);\r\n    }\r\n\r\n\treturn async.parallel = parallel;\r\n});\ndefine('skylark-langx-async/series',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n     function series(arr,args,ctx) {\r\n        var rets = [],\r\n            d = new Deferred(),\r\n            p = d.promise;\r\n\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        d.resolve();\r\n        objects.each(arr,function(i,func){\r\n            p = p.then(function(){\r\n                return func.apply(ctx,args);\r\n            });\r\n            rets.push(p);\r\n        });\r\n\r\n        return Deferred.all(rets);\r\n    }\r\n\r\n\treturn async.series = series;\r\n});\ndefine('skylark-langx-async/waterful',[\r\n    \"skylark-langx-objects\",\r\n    \"./async\",\r\n    \"./deferred\"\r\n],function(objects,async,Deferred){\r\n    function waterful(arr,args,ctx) {\r\n        var d = new Deferred(),\r\n            p = d.promise;\r\n\r\n        ctx = ctx || null;\r\n        args = args || [];\r\n\r\n        d.resolveWith(ctx,args);\r\n\r\n        objects.each(arr,function(i,func){\r\n            p = p.then(func);\r\n        });\r\n        return p;\r\n    }\r\n\r\n\treturn async.waterful = waterful;\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\",\r\n\t\"./deferred\",\r\n\t\"./each\",\r\n\t\"./parallel\",\r\n\t\"./series\",\r\n\t\"./waterful\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\n"]}